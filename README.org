* roipoly.py

Small python module to select a polygonal region of interest (ROI) in
an image that stored as a numpy array. The usage is similar to the
[[http://www.mathworks.de/de/help/images/ref/roipoly.html][roipoly]] function present in the image processing toolbox from MATLAB.

[[file:/img/ROIs.PNG]]

** Requirements
The module requires the python modules ~numpy~ and ~matplotlib~ to work.

** Running the example
+ Copy the files ~roipoly.py~ and ~example.py~ to a directory.
+ Switch to that directory and run the example from the shell using 
#+begin_SRC shell
python example.py
#+end_SRC
** Usage
*** Installation
Copy the file ~roipoly.py~ to your working directory or add it to PYTHONPATH.

*** Creating a ROI
Import the roipoly module in a new python file using
#+begin_SRC python 
from roipoly import roipoly
#+end_SRC
To draw a ROI within an image present as a numpy array,  show it using e.g. pylabs's =imshow=:
#+begin_SRC python 
import pylab as pl
pl.imshow(image) 
#+end_SRC
Then let the user draw a polygonal ROI:
#+begin_SRC python 
ROI = roipoly(roicolor='r')
#+end_SRC
The user can now interactively draw a polygon in the image by clicking
with the left mouse button to select the vertices of the polygon.
The optional argument ~roicolor~ defines the color of the ROI.

*** Displaying a ROI

*** Extracting a binary signal mask 